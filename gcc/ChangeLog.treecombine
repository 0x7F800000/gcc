2012-02-14  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-fold.c (simplify_bitwise_binary): Add fold of "(X ^ Y) & Y"
	as "~X & Y".

2012-02-14  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-fold.c (simplify_bitwise_binary): Initialize def1_arg2
	and def2_arg2 to NULL.

2012-02-14  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-forwprop.c: Split the combing functions out into ...
	* tree-ssa-fold.c: this.
	* Makefile.in (OBJS): Add tree-ssa-fold.o.
	(tree-ssa-fold.o): New file.

2012-02-13  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-forwprop.c (simplify_bitwise_binary): Fix merge of the
	last two patches.

2012-02-13  Andrew Pinski  <apinski@cavium.com>

	* fold-const.c (fold_comparison): Handle ((CAST)~X).
	* tree-ssa-forwprop.c (combine_cond_expr_cond): Swap operands so
	that fold_binary_loc would not return a non-folded tree.
	Don't call canonicalize_cond_expr_cond.
	(forward_propagate_into_comparison_1): Also try combine casts into the
	comparisons.
	(expand_possible_comparison): New function.
	(forward_propagate_into_comparison): Call expand_possible_comparison.
	(forward_propagate_into_gimple_cond): Take also a gsi.
	Call expand_possible_comparison.
	(forward_propagate_into_cond): Call expand_possible_comparison.
	(ssa_forward_propagate_and_combine): Update call to
	forward_propagate_into_gimple_cond.

2012-02-13  Andrew Pinski  <apinski@cavium.com>

	PR middle-end/33512
	* tree-ssa-forwprop.c (defcodefor_name): New function.
	(simplify_bitwise_binary): Use defcodefor_name.
	Simplify "( X | Y) & X" to X and "( X & Y) | X" to X.
	Simplify "(~X | Y) & X" to "X & Y" and
	"(~X & Y) | X" to "X | Y".

2012-02-13  Andrew Pinski  <apinski@cavium.com>

	* tree-ssa-forwprop.c (simplify_bitwise_binary): Assert that we have
	AND/XOR or IOR.
	Fold "(A OP1 B) OP0 (C OP1 B)" to "(A OP0 C) OP1 B".


Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

