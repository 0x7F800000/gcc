/* This file is part of GCC.

GCC is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 3, or (at your option) any later
version.

GCC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING3.  If not see
<http://www.gnu.org/licenses/>.  */

autogen definitions py-runtime;

py-runtime = { code = GPY_RR_extend_globl_stack,
	       arguments = { tree size },
               function_identifier = "gpy_rr_extend_runtime_stack",
               fntype = { void_type_node,
                          integer_type_node,
                          NULL_TREE
	       },
	       build_call = build_call_expr,
	       build_call_args = { fndecl, 1, size }
             };
py-runtime = { code = GPY_RR_fold_attrib,
	       arguments = { tree ident, tree addr, tree offset },
               function_identifier = "gpy_rr_fold_attribute",
               fntype = { gpy_attrib_type_ptr,
                          gpy_const_char_ptr,
                          gpy_unsigned_char_ptr,
                          integer_type_node,
                          NULL_TREE
	       },
	       build_call = build_call_expr,
	       build_call_args = { fndecl, 3, ident, addr, offset }
             };
py-runtime = { code = GPY_RR_fold_attrib_list,
	       arguments = { VEC(tree,gc) * attribs }
	       function_identifier = "gpy_rr_fold_attrib_list",
               fntype = { gpy_attrib_type_ptr_ptr,
			  integer_type_node,
			  va_list_type_node,
			  NULL_TREE
	       },
	       build_call = build_call_expr_loc_vec,
	       build_call_args = { BUILTINS_LOCATION, fndecl, attribs }
             };
py-runtime = { code = GPY_RR_fold_class_decl,
	       arguments = { tree attribs, tree size, tree ident }
	       function_identifier = "gpy_rr_fold_class_decl",
               fntype = { gpy_object_type_ptr,
			  gpy_attrib_type_ptr_ptr,
			  integer_type_node,
			  gpy_const_char_ptr,
			  NULL_TREE
	       },
	       build_call = build_call_expr,
	       build_call_args = { fndecl, attribs, size, ident }
             };
