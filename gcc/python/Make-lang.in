#This file is part of GCC.

#GCC is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 3, or (at your option)
#any later version.

#GCC is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with GCC; see the file COPYING3.  If not see
#<http://www.gnu.org/licenses/>.

PYTHON_EXES = python

.phony: python

python: ggpy$(exeext) gpy1$(exeext)

# core compiler gpy1
gpy1$(exeext): python/gpy1.o $(BACKEND) $(LIBSDEPS) attribs.o 
	echo "DEBUG: gpy1 - $(BACKEND) .. $(LIBSDEPS) .. $(LIBS) .. attribs.o .. $(GMPLIBS) .. $(BACKENDLIBS)"
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ python/gpy1.o \
	$(BACKEND) $(LIBS) attribs.o $(GMPLIBS) $(BACKENDLIBS) 

python/gpy1.o: python/gpy1.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \
  $(FLAGS_H) toplev.h $(GGC_H) $(TREE_H) $(DIAGNOSTIC_H)  \
  input.h options.h opts.h \
  gtype-gpy.h

# compiler driver gpy 
ggpy$(exeext): $(GCC_OBJS) version.o prefix.o intl.o $(EXTRA_GCC_OBJS) \
  $(LIBDEPS) gpy/ggpy.o
	echo "DEBUG: ggpy - $(EXTRA_GCC_OBJS) .. $(LIBS) .. $(GCC_OBJS) .. $(ALL_CFLAGS) .. $(LDFLAGS)" 
	$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ gpy/ggpy.o \
	  $(GCC_OBJS) version.o prefix.o intl.o $(EXTRA_GCC_OBJS) $(LIBS)

python/ggpy.o: python/ggpy.c $(CONFIG_H) $(SYSTEM_H) \
  coretypes.h $(DIAGNOSTIC_H) $(TREE_H) $(FLAGS_H) toplev.h langhooks.h $(TM_H)

python.srcextra: 

python.all.cross:

python.start.encap:
python.rest.encap:
python.man:
python.srcman:

python.mostlyclean:
	cd $(srcdir)/python; rm -f *.o

python.clean: python.mostlyclean

python.tags: force
	cd $(srcdir)/python; etags -o TAGS.sub *.y *.l *.c *.h; \
	etags --include TAGS.sub --include ../TAGS.sub

python.info: 
python.srcinfo: 
python.dvi: 
python.pdf: 
doc/python.info: 
doc/python.dvi: 
doc/python.pdf: 
python.html: 

.phony:python.install.common
.phony:python.install

python.install python.install.common python.install-common: python.install.common.done

python.install.common.done:  installdirs 
	for name in $(PYTHON_EXES); \
	do \
	   if [ -f $$name ] ; then \
	    name2="`echo \`basename $$name\` | sed -e '$(program_transform_name)' `"; \
	    rm -f $(DESTDIR)$(bindir)/$$name2$(exeext); \
	    echo $(INSTALL_PROGRAM) $$name$(exeext) $(DESTDIR)$(bindir)/$$name2$(exeext); \
	    $(INSTALL_PROGRAM) $$name$(exeext) $(DESTDIR)$(bindir)/$$name2$(exeext); \
	    chmod a+x $(DESTDIR)$(bindir)/$$name2$(exeext); \
	  fi ; \
	done

python.install-info: 
python.install-pdf: 
python.install-man:

# Stage hooks:
# The main makefile has already created stage?/python.

python.stage1: stage1-start
	-mv python/*$(objext) stage1/python
python.stage2: stage2-start
	-mv python/*$(objext) stage2/python
python.stage3: stage3-start
	-mv python/*$(objext) stage3/python
python.stage4: stage4-start
	-mv python/*$(objext) stage4/python
python.stageprofile: stageprofile-start
	-mv python/*$(objext) stageprofile/python
python.stagefeedback: stagefeedback-start
	-mv python/*$(objext) stagefeedback/python

config.status: python/config-lang.in
